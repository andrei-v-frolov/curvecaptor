#!/usr/bin/wish

# Initialization
set file [lindex $argv 0]
catch {image delete curves}
image create photo curves -file $file

wm title . "Curve Captor -- $file"
wm iconname . "lprt"


# Global parameters
set Vptick 100
set Iptick 10
set Vg 0


# Toolbar
set t .tools
frame $t -borderwidth 3 -relief raised

label $t.label -text "Tracing: "; label $t.plabel
entry $t.param -width 5 -justify right
label $t.units -textvariable units

set m $t.curve.menu
menubutton $t.curve -menu $m -textvariable curve -direction below -indicatoron yes -width 12 -borderwidth 2 -relief sunk
menu $m -tearoff 0
$m add command -label "Vp axis" -command {
	set curve "Vp axis"; set units "\[V\]"
	$t.param configure -textvariable Vptick
	$t.plabel configure -text ", tickmarks every"
	
	set markstyle 0
}
$m add command -label "Ip axis" -command {
	set curve "Ip axis"; set units "\[mA\]"
	$t.param configure -textvariable Iptick
	$t.plabel configure -text ", tickmarks every"
	
	set markstyle 1
}
$m add command -label "Plate curve" -command {
	set curve "Plate curve"; set units "\[V\]"
	$t.param configure -textvariable Vg
	$t.plabel configure -text "@ grid voltage"
	
	set markstyle 2
}
$m invoke 0

pack $t.label $t.curve $t.plabel $t.param $t.units -side left -expand no -pady 4
pack $t -side top -fill x


# Curve tracer canvas
set c .canvas
canvas $c -width [image width curves] -height [image height curves]
$c create image 0 0 -anchor nw -image curves
pack $c -side top -padx .5m -pady .5m

bind $c <1> "mark $c %x %y"
bind $c <B1-Motion> "move $c %x %y"

$c bind X <2> "select $c %x %y"
$c bind X <B2-Motion> "move $c %x %y"

bind . <Left> "nudge $c -1 0"
bind . <Right> "nudge $c 1 0"
bind . <Up> "nudge $c 0 -1"
bind . <Down> "nudge $c 0 1"
bind . <KP_Left> "nudge $c -1 0"
bind . <KP_Right> "nudge $c 1 0"
bind . <KP_Up> "nudge $c 0 -1"
bind . <KP_Down> "nudge $c 0 1"
bind . <KP_Home> "nudge $c -1 -1"
bind . <KP_Page_Up> "nudge $c 1 -1"
bind . <KP_End> "nudge $c -1 1"
bind . <KP_Page_Down> "nudge $c 1 1"

# Return current curve tag
proc ctag {} {
	global markstyle Vptick Iptick Vg
	
	switch $markstyle {
		0 { return "Vp@$Vptick" }
		1 { return "Ip@$Iptick" }
		2 { return "Vg=$Vg" }
		default { error "Undefined curve style" }
	}
}

# Draw cross-hairs
proc draw {c x y} {
	global markstyle
	
	switch $markstyle {
		0 {
			$c create polygon\
				$x $y\
				[expr $x-4] [expr $y-13]\
				[expr $x+5] [expr $y-13]\
				$x $y\
				[expr $x-6] $y\
				[expr $x+7] $y\
			-width 1 -outline red
		}
		1 {
			$c create polygon\
				$x $y\
				[expr $x+13] [expr $y-4]\
				[expr $x+13] [expr $y+5]\
				$x $y\
				$x [expr $y-6]\
				$x [expr $y+7]\
			-width 1 -outline red
		}
		default {
			$c create line\
				$x $y $x [expr $y+7]\
				$x $y [expr $x+7] $y\
				$x $y $x [expr $y-6]\
				$x $y [expr $x-6] $y\
			-width 1
		}
	}
}

# Activate tag
proc activate {c t} {
	$c itemconf active -fill red; $c dtag active
	$c addtag active withtag $t; $c itemconf active -fill orange
	$c raise active
}

# New cross-hairs mark
proc mark {c x y} {
	global X Y; set X $x; set Y $y
	
	set t [draw $c $x $y]
	$c addtag [ctag] withtag $t
	$c addtag X withtag $t
	activate $c $t
}

# Select mark for moving
proc select {c x y} {
	global X Y; set X $x; set Y $y
	
	activate $c current
}

# Move active mark
proc move {c x y} {
	global X Y; nudge $c [expr $x-$X] [expr $y-$Y]; set X $x; set Y $y
}

# Nudge active mark
proc nudge {c dx dy} {
	if {[$c find withtag active] == ""} {
		return
	}
	
	$c move active $dx $dy
}




bind $c <3> "dump $c"

proc dump {c} {
	foreach t [$c find withtag X] {
		puts [concat [lindex [$c gettags $t] 0] [lrange [$c coords $t] 0 1]]
	}
}




frame .buttons
pack .buttons -side bottom -fill x -pady 2m
button .buttons.dismiss -text Dismiss -command "destroy ."
button .buttons.code -text "See Code" -command "showCode ."
pack .buttons.dismiss .buttons.code -side left -expand 1

